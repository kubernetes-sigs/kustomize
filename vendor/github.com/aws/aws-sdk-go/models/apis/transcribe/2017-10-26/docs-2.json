{
  "version": "2.0",
  "service": "<p>Operations and objects for transcribing speech to text.</p>",
  "operations": {
    "CreateVocabulary": "<p>Creates a new custom vocabulary that you can use to change the way Amazon Transcribe handles transcription of an audio file.</p>",
    "DeleteVocabulary": "<p>Deletes a vocabulary from Amazon Transcribe. </p>",
    "GetTranscriptionJob": "<p>Returns information about a transcription job. To see the status of the job, check the <code>TranscriptionJobStatus</code> field. If the status is <code>COMPLETED</code>, the job is finished and you can find the results at the location specified in the <code>TranscriptionFileUri</code> field.</p>",
    "GetVocabulary": "<p>Gets information about a vocabulary.</p>",
    "ListTranscriptionJobs": "<p>Lists transcription jobs with the specified status.</p>",
    "ListVocabularies": "<p>Returns a list of vocabularies that match the specified criteria. If no criteria are specified, returns the entire list of vocabularies.</p>",
    "StartTranscriptionJob": "<p>Starts an asynchronous job to transcribe speech to text.</p>",
    "UpdateVocabulary": "<p>Updates an existing vocabulary with new values.</p>"
  },
  "shapes": {
    "BadRequestException": {
      "base": "<p>Your request didn't pass one or more validation tests. For example, a name already exists when createing a resource or a name may not exist when getting a transcription job or custom vocabulary. See the exception <code>Message</code> field for more information.</p>",
      "refs": {
      }
    },
    "Boolean": {
      "base": null,
      "refs": {
        "Settings$ShowSpeakerLabels": "<p>Determines whether the transcription job should use speaker recognition to identify different speakers in the input audio. If you set the <code>ShowSpeakerLabels</code> field to true, you must also set the maximum number of speaker labels <code>MaxSpeakerLabels</code> field.</p>"
      }
    },
    "ConflictException": {
      "base": "<p>The <code>JobName</code> field is a duplicate of a previously entered job name. Resend your request with a different name.</p>",
      "refs": {
      }
    },
    "CreateVocabularyRequest": {
      "base": null,
      "refs": {
      }
    },
    "CreateVocabularyResponse": {
      "base": null,
      "refs": {
      }
    },
    "DateTime": {
      "base": null,
      "refs": {
        "CreateVocabularyResponse$LastModifiedTime": "<p>The date and time that the vocabulary was created.</p>",
        "GetVocabularyResponse$LastModifiedTime": "<p>The date and time that the vocabulary was last modified.</p>",
        "TranscriptionJob$CreationTime": "<p>Timestamp of the date and time that the job was created.</p>",
        "TranscriptionJob$CompletionTime": "<p>Timestamp of the date and time that the job completed.</p>",
        "TranscriptionJobSummary$CreationTime": "<p>Timestamp of the date and time that the job was created.</p>",
        "TranscriptionJobSummary$CompletionTime": "<p>Timestamp of the date and time that the job completed.</p>",
        "UpdateVocabularyResponse$LastModifiedTime": "<p>The date and time that the vocabulary was updated.</p>",
        "VocabularyInfo$LastModifiedTime": "<p>The date and time that the vocabulary was last modified.</p>"
      }
    },
    "DeleteVocabularyRequest": {
      "base": null,
      "refs": {
      }
    },
    "FailureReason": {
      "base": null,
      "refs": {
        "BadRequestException$Message": null,
        "CreateVocabularyResponse$FailureReason": "<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
        "GetVocabularyResponse$FailureReason": "<p>If the <code>VocabularyState</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
        "TranscriptionJob$FailureReason": "<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains information about why the job failed.</p>",
        "TranscriptionJobSummary$FailureReason": "<p>If the <code>TranscriptionJobStatus</code> field is <code>FAILED</code>, this field contains a description of the error.</p>"
      }
    },
    "GetTranscriptionJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetTranscriptionJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "GetVocabularyRequest": {
      "base": null,
      "refs": {
      }
    },
    "GetVocabularyResponse": {
      "base": null,
      "refs": {
      }
    },
    "InternalFailureException": {
      "base": "<p>There was an internal error. Check the error message and try your request again.</p>",
      "refs": {
      }
    },
    "LanguageCode": {
      "base": null,
      "refs": {
        "CreateVocabularyRequest$LanguageCode": "<p>The language code of the vocabulary entries.</p>",
        "CreateVocabularyResponse$LanguageCode": "<p>The language code of the vocabulary entries.</p>",
        "GetVocabularyResponse$LanguageCode": "<p>The language code of the vocabulary entries.</p>",
        "StartTranscriptionJobRequest$LanguageCode": "<p>The language code for the language used in the input media file.</p>",
        "TranscriptionJob$LanguageCode": "<p>The language code for the input speech.</p>",
        "TranscriptionJobSummary$LanguageCode": "<p>The language code for the input speech.</p>",
        "UpdateVocabularyRequest$LanguageCode": "<p>The language code of the vocabulary entries.</p>",
        "UpdateVocabularyResponse$LanguageCode": "<p>The language code of the vocabulary entries.</p>",
        "VocabularyInfo$LanguageCode": "<p>The language code of the vocabulary entries.</p>"
      }
    },
    "LimitExceededException": {
      "base": "<p>Either you have sent too many requests or your input file is too long. Wait before you resend your request, or use a smaller file and resend the request.</p>",
      "refs": {
      }
    },
    "ListTranscriptionJobsRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListTranscriptionJobsResponse": {
      "base": null,
      "refs": {
      }
    },
    "ListVocabulariesRequest": {
      "base": null,
      "refs": {
      }
    },
    "ListVocabulariesResponse": {
      "base": null,
      "refs": {
      }
    },
    "MaxResults": {
      "base": null,
      "refs": {
        "ListTranscriptionJobsRequest$MaxResults": "<p>The maximum number of jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>",
        "ListVocabulariesRequest$MaxResults": "<p>The maximum number of vocabularies to return in the response. If there are fewer results in the list, this response contains only the actual results.</p>"
      }
    },
    "MaxSpeakers": {
      "base": null,
      "refs": {
        "Settings$MaxSpeakerLabels": "<p>The maximum number of speakers to identify in the input audio. If there are more speakers in the audio than this number, multiple speakers will be identified as a single speaker. If you specify the <code>MaxSpeakerLabels</code> field, you must set the <code>ShowSpeakerLabels</code> field to true.</p>"
      }
    },
    "Media": {
      "base": "<p>Describes the input media file in a transcription request.</p>",
      "refs": {
        "StartTranscriptionJobRequest$Media": "<p>An object that describes the input media for a transcription job.</p>",
        "TranscriptionJob$Media": "<p>An object that describes the input media for a transcription job.</p>"
      }
    },
    "MediaFormat": {
      "base": null,
      "refs": {
        "StartTranscriptionJobRequest$MediaFormat": "<p>The format of the input media file.</p>",
        "TranscriptionJob$MediaFormat": "<p>The format of the input media file.</p>"
      }
    },
    "MediaSampleRateHertz": {
      "base": null,
      "refs": {
        "StartTranscriptionJobRequest$MediaSampleRateHertz": "<p>The sample rate, in Hertz, of the audio track in the input media file. </p>",
        "TranscriptionJob$MediaSampleRateHertz": "<p>The sample rate, in Hertz, of the audio track in the input media file. </p>"
      }
    },
    "NextToken": {
      "base": null,
      "refs": {
        "ListTranscriptionJobsRequest$NextToken": "<p>If the result of the previous request to <code>ListTranscriptionJobs</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>",
        "ListTranscriptionJobsResponse$NextToken": "<p>The <code>ListTranscriptionJobs</code> operation returns a page of jobs at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListTranscriptionJobs</code> operation to return in the next page of jobs.</p>",
        "ListVocabulariesRequest$NextToken": "<p>If the result of the previous request to <code>ListVocabularies</code> was truncated, include the <code>NextToken</code> to fetch the next set of jobs.</p>",
        "ListVocabulariesResponse$NextToken": "<p>The <code>ListVocabularies</code> operation returns a page of vocabularies at a time. The maximum size of the page is set by the <code>MaxResults</code> parameter. If there are more jobs in the list than the page size, Amazon Transcribe returns the <code>NextPage</code> token. Include the token in the next request to the <code>ListVocabularies</code> operation to return in the next page of jobs.</p>"
      }
    },
    "NotFoundException": {
      "base": "<p>We can't find the requested transcription job or custom vocabulary. Check the name and try your request again.</p>",
      "refs": {
      }
    },
    "Phrase": {
      "base": null,
      "refs": {
        "Phrases$member": null
      }
    },
    "Phrases": {
      "base": null,
      "refs": {
        "CreateVocabularyRequest$Phrases": "<p>An array of strings that contains the vocabulary entries. </p>",
        "UpdateVocabularyRequest$Phrases": "<p>An array of strings containing the vocabulary entries.</p>"
      }
    },
    "Settings": {
      "base": "<p>Provides optional settings for the <code>StartTranscriptionJob</code> operation.</p>",
      "refs": {
        "StartTranscriptionJobRequest$Settings": "<p>A <code>Settings</code> object that provides optional settings for a transcription job.</p>",
        "TranscriptionJob$Settings": "<p>Optional settings for the transcription job.</p>"
      }
    },
    "StartTranscriptionJobRequest": {
      "base": null,
      "refs": {
      }
    },
    "StartTranscriptionJobResponse": {
      "base": null,
      "refs": {
      }
    },
    "String": {
      "base": null,
      "refs": {
        "ConflictException$Message": null,
        "InternalFailureException$Message": null,
        "LimitExceededException$Message": null,
        "NotFoundException$Message": null
      }
    },
    "Transcript": {
      "base": "<p>Describes the output of a transcription job.</p>",
      "refs": {
        "TranscriptionJob$Transcript": "<p>An object that describes the output of the transcription job.</p>"
      }
    },
    "TranscriptionJob": {
      "base": "<p>Describes an asynchronous transcription job that was created with the <code>StartTranscriptionJob</code> operation.</p>",
      "refs": {
        "GetTranscriptionJobResponse$TranscriptionJob": "<p>An object that contains the results of the transcription job.</p>",
        "StartTranscriptionJobResponse$TranscriptionJob": "<p>An object containing details of the asynchronous transcription job.</p>"
      }
    },
    "TranscriptionJobName": {
      "base": null,
      "refs": {
        "GetTranscriptionJobRequest$TranscriptionJobName": "<p>The name of the job.</p>",
        "ListTranscriptionJobsRequest$JobNameContains": "<p>When specified, the jobs returned in the list are limited to jobs whose name contains the specified string.</p>",
        "StartTranscriptionJobRequest$TranscriptionJobName": "<p>The name of the job. The name must be unique within an AWS account.</p>",
        "TranscriptionJob$TranscriptionJobName": "<p>A name to identify the transcription job.</p>",
        "TranscriptionJobSummary$TranscriptionJobName": "<p>The name assigned to the transcription job when it was created.</p>"
      }
    },
    "TranscriptionJobStatus": {
      "base": null,
      "refs": {
        "ListTranscriptionJobsRequest$Status": "<p>When specified, returns only transcription jobs with the specified status.</p>",
        "ListTranscriptionJobsResponse$Status": "<p>The requested status of the jobs returned.</p>",
        "ListVocabulariesResponse$Status": "<p>The requested vocabulary state.</p>",
        "TranscriptionJob$TranscriptionJobStatus": "<p>The status of the transcription job.</p>",
        "TranscriptionJobSummary$TranscriptionJobStatus": "<p>The status of the transcription job. When the status is <code>COMPLETED</code>, use the <code>GetTranscriptionJob</code> operation to get the results of the transcription.</p>"
      }
    },
    "TranscriptionJobSummaries": {
      "base": null,
      "refs": {
        "ListTranscriptionJobsResponse$TranscriptionJobSummaries": "<p>A list of objects containing summary information for a transcription job.</p>"
      }
    },
    "TranscriptionJobSummary": {
      "base": "<p>Provides a summary of information about a transcription job.</p>",
      "refs": {
        "TranscriptionJobSummaries$member": null
      }
    },
    "UpdateVocabularyRequest": {
      "base": null,
      "refs": {
      }
    },
    "UpdateVocabularyResponse": {
      "base": null,
      "refs": {
      }
    },
    "Uri": {
      "base": null,
      "refs": {
        "GetVocabularyResponse$DownloadUri": "<p>The S3 location where the vocabulary is stored. Use this URI to get the contents of the vocabulary. The URI is available for a limited time.</p>",
        "Media$MediaFileUri": "<p>The S3 location of the input media file. The URI must be in the same region as the API endpoint that you are calling. The general form is:</p> <p> <code> https://&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt; </code> </p> <p>For example:</p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/example.mp4</code> </p> <p> <code>https://s3-us-east-1.amazonaws.com/examplebucket/mediadocs/example.mp4</code> </p> <p>For more information about S3 object names, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys\">Object Keys</a> in the <i>Amazon S3 Developer Guide</i>.</p>",
        "Transcript$TranscriptFileUri": "<p>The S3 location where the transcription result is stored. Use this URI to access the results of the transcription job. </p>"
      }
    },
    "Vocabularies": {
      "base": null,
      "refs": {
        "ListVocabulariesResponse$Vocabularies": "<p>A list of objects that describe the vocabularies that match the search criteria in the request.</p>"
      }
    },
    "VocabularyInfo": {
      "base": "<p>Provides information about a custom vocabulary.</p>",
      "refs": {
        "Vocabularies$member": null
      }
    },
    "VocabularyName": {
      "base": null,
      "refs": {
        "CreateVocabularyRequest$VocabularyName": "<p>The name of the vocabulary. The name must be unique within an AWS account. The name is case-sensitive.</p>",
        "CreateVocabularyResponse$VocabularyName": "<p>The name of the vocabulary.</p>",
        "DeleteVocabularyRequest$VocabularyName": "<p>The name of the vocabulary to delete. </p>",
        "GetVocabularyRequest$VocabularyName": "<p>The name of the vocabulary to return information about. The name is case-sensitive.</p>",
        "GetVocabularyResponse$VocabularyName": "<p>The name of the vocabulary to return.</p>",
        "ListVocabulariesRequest$NameContains": "<p>When specified, the vocabularies returned in the list are limited to vocabularies whose name contains the specified string. The search is case-insensitive, <code>ListVocabularies</code> will return both \"vocabularyname\" and \"VocabularyName\" in the response list.</p>",
        "Settings$VocabularyName": "<p>The name of a vocabulary to use when processing the transcription job.</p>",
        "UpdateVocabularyRequest$VocabularyName": "<p>The name of the vocabulary to update. The name is case-sensitive.</p>",
        "UpdateVocabularyResponse$VocabularyName": "<p>The name of the vocabulary that was updated.</p>",
        "VocabularyInfo$VocabularyName": "<p>The name of the vocabulary.</p>"
      }
    },
    "VocabularyState": {
      "base": null,
      "refs": {
        "CreateVocabularyResponse$VocabularyState": "<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>",
        "GetVocabularyResponse$VocabularyState": "<p>The processing state of the vocabulary.</p>",
        "ListVocabulariesRequest$StateEquals": "<p>When specified, only returns vocabularies with the <code>VocabularyState</code> field equal to the specified state.</p>",
        "UpdateVocabularyResponse$VocabularyState": "<p>The processing state of the vocabulary. When the <code>VocabularyState</code> field contains <code>READY</code> the vocabulary is ready to be used in a <code>StartTranscriptionJob</code> request.</p>",
        "VocabularyInfo$VocabularyState": "<p>The processing state of the vocabulary. If the state is <code>READY</code> you can use the vocabulary in a <code>StartTranscriptionJob</code> request.</p>"
      }
    }
  }
}
